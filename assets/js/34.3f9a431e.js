(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{399:function(t,s,e){"use strict";e.r(s);var v=e(42),_=Object(v.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"属性值的计算过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#属性值的计算过程"}},[t._v("#")]),t._v(" 属性值的计算过程")]),t._v(" "),e("p",[t._v("浏览器渲染页面是一个一个的元素进行渲染，顺序是按照页面文档的树形目录结构进行")]),t._v(" "),e("p",[t._v("渲染每个元素的前提条件是：该元素的所有css属性必须有值，只有所有值全部确定下来后才能知道这个元素该如何显示。")]),t._v(" "),e("p",[t._v("一个元素，从所有属性没有值到所有属性都有值的过程叫做属性的计算过程")]),t._v(" "),e("p",[t._v("属性值计算过程需要经过四个步骤：")]),t._v(" "),e("p",[e("img",{attrs:{src:"/ContentImgs/image-20200601183622801.png",alt:"image-20200601183622801"}})]),t._v(" "),e("ol",[e("li",[t._v("确定声明值：对没有冲突的属性，直接作用在这元素上(声明值包括作者样式表（自己书写的样式）和浏览器默认样式表（user agent stylesheet）)\n"),e("ul",[e("li",[t._v("比如 a 元素作者样式表里面有color属性，所以它不能继承父元素的color样式")])])]),t._v(" "),e("li",[t._v("层叠冲突：对于一个元素，多次声明了同一个属性，选择css权重最高的样式")]),t._v(" "),e("li",[t._v("对于那些没有声明属性值的属性，若该属性可以继承，那么通过继承得到属性值")]),t._v(" "),e("li",[t._v("对于任然没有属性值的属性，使用默认值：如；"),e("code",[t._v("background:transparent")])])]),t._v(" "),e("p",[t._v("两个特殊的css取值：")]),t._v(" "),e("ul",[e("li",[t._v("inherit:手动继承，相当于把第三步提前")]),t._v(" "),e("li",[t._v("initial:将该属性设置为初始值，相当于把第四步提前")])])])}),[],!1,null,null,null);s.default=_.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{368:function(t,e,a){"use strict";a.r(e);var v=a(42),n=Object(v.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("虚拟dom")]),t._v(" "),a("p",[t._v("虚拟dom就是用js对象来描述的dom")]),t._v(" "),a("p",[a("img",{attrs:{src:"/ContentImgs/image-20200606171728266.png",alt:"image-20200606171728266"}})]),t._v(" "),a("p",[t._v("vue的编译过程？")]),t._v(" "),a("ul",[a("li",[t._v("编译：首先因为vue写的语句，html根本不识别，通过编译的过程， 可以进行依赖收集，进行依赖收集之后，就可以吧 data中的数据模型和视图之间绑定了关系。产生了依赖关系,以后如果模型产生了变化之后，我们就可以通知依赖去更新。这就是执行编译的目的。模型驱动视图。")])]),t._v(" "),a("p",[t._v("vue双向数据绑定的原理？")]),t._v(" "),a("ul",[a("li",[t._v("我们在双向数据绑定的时候通常会使用v-model指令放在input这样ui控件上。我们在编译的时候可以解析出这个v-model，然后内部要执行两件事情，第一件事：把v-model所属的元素上加了事件监听，（监听input事件），这样input发生变化的时候，我们就可以把最新的值设置到vue的实例上，因为vue的实例已经实现了数据的响应化（defineProperty），响应化的set函数会触发，就会通知依赖去更新视图。所以界面中跟这个数据相关的就会是更新。")])]),t._v(" "),a("h3",{attrs:{id:"new-vue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#new-vue"}},[t._v("#")]),t._v(" new vue")]),t._v(" "),a("p",[t._v("初始化：数据的响应化 objectdefineproperty 当数据变化，更新视图，具体更新哪视图，就需要依赖收集（编译，编译能把vue特殊的指令，事件，属性，插值等）")]),t._v(" "),a("p",[t._v("Dep管理所有的Watcher，当数据被set后就可以让Dep去通知响应的watcher去执行更新操作。")]),t._v(" "),a("h3",{attrs:{id:"令牌机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#令牌机制"}},[t._v("#")]),t._v(" 令牌机制")]),t._v(" "),a("p",[t._v("router.beforEach的令牌机制（token）,用户登录成功之后，服务器返回一个token，浏览器拿到这个token之后保存到cookie或者loaclStorage,只要以前登录过而且令牌没有过期，以后再发送请求的时候就可以携带着这个令牌，只要有令牌，服务器就会认为 有授权，服务器就会正确的返回数据")]),t._v(" "),a("p",[a("img",{attrs:{src:"/ContentImgs/image-20200606204706198.png",alt:"image-20200606204706198"}})]),t._v(" "),a("p",[t._v("前端token规范（ajax携带token）")]),t._v(" "),a("p",[a("img",{attrs:{src:"/ContentImgs/image-20200607131329432.png",alt:""}})]),t._v(" "),a("p",[t._v("后端规范（JWT）")]),t._v(" "),a("p",[a("img",{attrs:{src:"/ContentImgs/image-20200607131423988.png",alt:"image-20200607131423988"}})])])}),[],!1,null,null,null);e.default=n.exports}}]);